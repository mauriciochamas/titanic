table(train$Survived)
prop.table(table(train$Survived))
test$survived<- rep(0,418)
submit <- data.frame(PassengerId=test$PassengerId,survived=test$survived)
write.csv(submit,file = "todosmueren.csv",row.names = F)
prop.table(table(train$Sex,train$Survived),1)
test$survived[test$Sex=="female"] <- 1
summary(train$Age)
train$Child <- 0
train$Child[train$Age<18] <- 1
aggregate(Survived~Child+Sex, data = train, FUN = sum){sum(x)/length(x)}
train$Fare2 <- '30+'
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
aggregate(Survived~Fare2+Pclass+Sex, data = train,FUN=function(x){sum(x)/length(x)})
#If you wanted to predict a continuous variable, method="anova".
#But here, we just want a one or a zero, so method="class"
library(rpart)
fit <- rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data = train,method = "class")
plot(fit)
text(fit)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
pred <- predict(fit,test,type = "class")
submit <- data.frame(PassengerId=test$PassengerId,Survived=pred)
write.csv(submit,file = "arbol.csv",row.names = F)
fit <- rpart(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked,data = train,method = "class",control = rpart.control(minsplit = 2,cp=0))
fancyRpartPlot(fit)
pred <- predict(fit,test,type = "class")
submit <- data.frame(PassengerId=test$PassengerId,Survived=pred)
write.csv(submit,file = "firsttree.csv",row.names = F)
new.fit <- prp(fit,snip=TRUE)$obj
fancyRpartPlot(new.fit)
